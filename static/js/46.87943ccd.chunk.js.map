{"version":3,"file":"static/js/46.87943ccd.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PresenceContext","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","arguments","undefined","queue","cancel","frameData","i","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","max","min","forEach","keepAlive","immediate","frame","cancelFrame","requestAnimationFrame","noop","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","useIsomorphicLayoutEffect","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","children","jsx","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","postRender","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","invariant","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","HandoffCancelAllAnimations","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}